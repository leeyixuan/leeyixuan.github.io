---
layout:     post
title:      "1px边框问题"
date:       2018-8-5
author:     "leeyixuan"
header-img: "img/background/post-bg-git.jpg"
tags:
    - 移动端适配方案
---


## 问题由来
UI的视觉设计稿中边框标注的1px是指1个物理像素，由于不同的手机有不同的设备像素比devicePixelRatio，或者页面缩放，会导致边框变宽。那么如何保持在不同设备上，边框始终只由1个设备物理像素点渲染？


解决边框变粗的6种办法：

## 1. 0.5px边框
 
```css
div {
	border : 1px solid black;
}

@media (-webkit-devicd-pixel-ratio : 2) {
	div {
	border : 0.5px solid black;
	}
}
```


缺点：兼容性较差。 可能不认识0.5px边框的浏览器，将会把它解释成0px，没有边框。




## 2.border-image

① `border: 0 0 1px 0` 方案：

<img class="shadow" width="450" src="https://www.github.com/CoolRabbit520/photos/raw/master/小书匠/1533606551180.png" />

```css
.border-bottom-1px {
border-width: 0 0 1px 0;
-webkit-border-image: url(test.png) 0 0 2 0 stretch;
border-image: url(test.png) 0 0 2 0 stretch;
}
```
<img class="shadow" width="450" src="https://www.github.com/CoolRabbit520/photos/raw/master/小书匠/1533606529290.png" />

② `border：1px 0`方案：
```css
.border-bottom-1px {
border-width: 0 0 1px 0;
-webkit-border-image: url(test.png)  2 0 stretch;
border-image: url(linenew.png)  2 0 stretch;
}
```

缺点：

- 不同的1px border方案要要使用不同的图片，并且border-image-slice的参数也要进行相应的调整
- 修改颜色麻烦, 需要替换图片
- 圆角需要特殊处理，并且边缘会模糊







## 3.伪元素 + transform 实现

把原先元素的 border 去掉，然后利用 :before 或者 :after 重做border ，并 transform 的 scale 缩小一半。

step1：使用 mixin 定义一个函数。

① `border: 0 0 1px 0` 方案：
```css
@mixin border-1px($color) {
    position: relative;
    &:after{
        position: absolute;
		content: ' ';
        display: block;

        left: 0;
        bottom: 0; /* 下边框*/
		
        width: 100%;
        border-top: 1px solid $color;
    }
}
```

② 圆角方案：
```css
@mixin border-1px($color) {
    position: relative;
    &:after{
		position: absolute;
		content: '';
		width: 200%;
		height: 200%;
		top: 0;
		left: 0;
		border: 1px solid $color;;
		border-radius: 4px;
		-webkit-transform: scale(0.5,0.5);
		transform: scale(0.5,0.5);
		-webkit-transform-origin: top left;
		}
}
```


step2：通过 @media (媒体查询)，来确定设备的dpr，并以此来改变伪类边框的宽度。
```css
@media (-webkit-min-device-pixel-ratio: 1.5),(min-device-pixel-ratio: 1.5) {
    .border-1px{
        &::after{
            -webkit-transform: scaleY(0.7);
            transform: scaleY(0.7);
        }
    }
}
@media (-webkit-min-device-pixel-ratio: 2),(min-device-pixel-ratio: 2) {
    .border-1px{
        &::after{
            -webkit-transform: scaleY(0.5);
            transform: scaleY(0.5);
        }
    }
}
```

step3：调用。
```css
div{
    @include border-1px(rgba(7,17,27,0.1));
}
```


优点： css3方案，不适用图片，适合广泛使用。



## 4. viewport + rem

直接为border设置1px，通过js进行媒体查询并即时修改meta元素。

```javascript

var viewport = document.querySelector("meta[name=viewport]");  
if (window.devicePixelRatio == 1) {  
    viewport.setAttribute('content', 'width=device-width,initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no');  
}  
if (window.devicePixelRatio == 2) {  
    viewport.setAttribute('content', 'width=device-width,initial-scale=0.5, maximum-scale=0.5, minimum-scale=0.5, user-scalable=no');  
}  
if (window.devicePixelRatio == 3) {  
    viewport.setAttribute('content', 'width=device-width,initial-scale=0.3333333333333333, maximum-scale=0.3333333333333333, minimum-scale=0.3333333333333333, user-scalable=no');  }  
var docEl = document.documentElement;  
var fontsize = 10 * (docEl.clientWidth / 320) + 'px';  
docEl.style.fontSize = fontsize;  
 
```
缺点：这种方案很不实用，牺牲了缩放和视口宽度来将就1px边框，很不可取。

## 5. box-shadow 
```css
div{
    -webkit-box-shadow:0 1px 1px -1px rgba(0, 0, 0, 0.5);
}

```

优点是圆角不是问题，缺点是颜色不好控制。

## reference 
1. [使用border-image实现类似iOS7的1px底边](https://github.com/AlloyTeam/Mars/blob/master/solutions/border-1px.md)
2. [移动web 1像素边框 瞧瞧大公司是怎么做的](https://segmentfault.com/a/1190000007604842#articleHeader3)